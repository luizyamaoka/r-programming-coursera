pwq
pwd
help()
hw1_data <- read.csv("~/Downloads/hw1_data.csv")
View(hw1_data)
hw1_data(1:2,)
hw1_data
hw1_data[1:2,]
hw1_data.lenth
hw1_data.length
hw1_data.length()
length(hw1_data)
dim(hw1_data)
hw1_data[-2:-1,]
hw1_data[152:153,]
hw1_data[47, "Ozone"]
hw1_data[, "Ozone"]
hw1_data[, "Ozone"].is.na()
is.na(hw1_data[, "Ozone"])
hw1_data[,is.na(hw1_data$Ozone)]
hw1_data[,hw1_data$Ozone == 41]
hw1_data[hw1_data$Ozone = 41,
hw1_data[hw1_data$Ozone = 41, ]
hw1_data[hw1_data$Ozone == 41, ]
hw1_data
a = hw1_data[, "Ozone"]
a
class(a)
na <- a[is.na(a)]
na
length(na)
not_na <- a[!is.na(a)]
not_na
mean(not_na)
filter <- subset(hw1_data, "Ozone" > 31 && Temp > 90)
filter
filter <- subset(hw1_data, "Ozone" > 31)
filter
hw1_data[hw1_data$Ozone > 31, ]
hw1_data[hw1_data$Ozone > 31 & hw1_data$Temp > 90, ]
hw1_data[hw1_data$Ozone > 31 & hw1_data$Temp > 90, "Solar.R"]
hw1_data[hw1_data$Ozone > 31 & hw1_data$Temp > 90 & !is.na(Ozone), "Solar.R"]
hw1_data[hw1_data$Ozone > 31 & hw1_data$Temp > 90 & !is.na(hw1_data$Ozone), "Solar.R"]
mean(hw1_data[hw1_data$Ozone > 31 & hw1_data$Temp > 90 & !is.na(hw1_data$Ozone), "Solar.R"])
hw1_data[hw1_data$Month = 6, "Solar.R"]
hw1_data[hw1_data$Month == 6, "Solar.R"]
hw1_data[hw1_data$Month == 6, "Temp"]
mean(hw1_data[hw1_data$Month == 6, "Temp"])
max(hw1_data[hw1_data$Month == 5, "Ozone"])
hw1_data[hw1_data$Month == 5, "Ozone"]
hw1_data[hw1_data$Month == 5 & !is.na(hw1_data$Ozone), "Ozone"]
max(hw1_data[hw1_data$Month == 5 & !is.na(hw1_data$Ozone), "Ozone"])
x <- 1:4
y <- 2:3
x
y
x + y
install.packages("swirl")
library(swirl)
library(swirl)
install.packages("swirl")
library(swirl)
data <- read.csv("/home/luizyamaoka/R/specdata/1.csv")
data <- read.csv("/home/luizyamaoka/R/specdata/001.csv")
data
?formatC
formatC(1, 3)
?prettyNum
prettyNum(1, zero.print=true)
prettyNum(1, zero.print=True)
prettyNum(1, zero.print=0)
prettyNum(1, 3, zero.print=0)
formatC(1, width=3, format="d", flag="0")
data["sulfate"]
data["sulfate", is.na() = False]
data["sulfate", na.rm = removeNa]
mean(data["sulfate"], na.rm = removeNa)
mean(data["sulfate"], na.rm = removeNA)
c(1:10)
mean(c(1:10))
head(data)
is.na(data["sulfate"])
data(!is.na(data["sulfate"]))
data(na.rm = TRUE)
sd(data["sulfate"], na.rm = TRUE)
class(data["sulfate"])
colMeans(data["sulfate"])
colMeans(data["sulfate"], na.rm = TRUE)
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result!
data <- read.csv(directory + formatC(1, width=3, format="d", flag="0") + ".csv")
colMeans(data["sulfate"], na.rm = TRUE)
}
x <- pollutantmean("/home/luizyamaoka/R/specdata/", "sulfate", 1)
paste("a", "b", "c")
paste("a", "b", "c", sep="")
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result!
data <- read.csv(paste(directory, formatC(1, width=3, format="d", flag="0"), ".csv", sep = "")
colMeans(data["sulfate"], na.rm = TRUE)
}
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result!
data <- read.csv(paste(directory, formatC(1, width=3, format="d", flag="0"), ".csv", sep = ""))
colMeans(data["sulfate"], na.rm = TRUE)
}
x <- pollutantmean("/home/luizyamaoka/R/specdata/", "sulfate", 1)
x
class(x)
head(data)
colSums(data["sulfate"], na.rm=TRUE)
col(data["sulfate"], na.rm=TRUE)
nrow(data["sulfate"], na.rm = TRUE)
nrow(data["sulfate"])
nrow(na.omit(data["sulfate"]))
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result!
sum = 0;
count = 0;
for (i in id) {
data <- read.csv(paste(directory, formatC(1, width=3, format="d", flag="0"), ".csv", sep = ""))
sum <- sum + colSums(data["sulfate"], na.rm = TRUE)
count <- count + nrow(na.omit(data["sulfate"]))
}
sum / count
}
pollutantmean("/home/luizyamaoka/R/specdata/", "sulfate", 1:10)
pollutantmean("/home/luizyamaoka/R/specdata/", "sulfate", 70:72)
pollutantmean("/home/luizyamaoka/R/specdata/", "sulfate", 1:10)
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result!
sum = 0;
count = 0;
for (i in id) {
data <- read.csv(paste(directory, formatC(i, width=3, format="d", flag="0"), ".csv", sep = ""))
sum <- sum + colSums(data["sulfate"], na.rm = TRUE)
count <- count + nrow(na.omit(data["sulfate"]))
}
sum / count
}
pollutantmean("/home/luizyamaoka/R/specdata/", "sulfate", 1:10)
pollutantmean("/home/luizyamaoka/R/specdata/", "sulfate", 70:72)
pollutantmean("/home/luizyamaoka/R/specdata/", "nitrate", 70:72)
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result!
sum = 0;
count = 0;
for (i in id) {
data <- read.csv(paste(directory, formatC(i, width=3, format="d", flag="0"), ".csv", sep = ""))
sum <- sum + colSums(data[pollutant], na.rm = TRUE)
count <- count + nrow(na.omit(data[pollutant]))
}
sum / count
}
pollutantmean("/home/luizyamaoka/R/specdata/", "nitrate", 70:72)
pollutantmean <- function(directory, pollutant, id = 1:332) {
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result!
sum = 0;
count = 0;
for (i in id) {
data <- read.csv(paste(directory, formatC(i, width=3, format="d", flag="0"), ".csv", sep = ""))
sum <- sum + colSums(data[pollutant], na.rm = TRUE)
count <- count + nrow(na.omit(data[pollutant]))
}
if (count == 0) {
0
} else {
sum / count
}
}
}
}
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result!
sum = 0;
count = 0;
for (i in id) {
data <- read.csv(paste(directory, formatC(i, width=3, format="d", flag="0"), ".csv", sep = ""))
sum <- sum + colSums(data[pollutant], na.rm = TRUE)
count <- count + nrow(na.omit(data[pollutant]))
}
if (count == 0) {
0
} else {
sum / count
}
}
pollutantmean("/home/luizyamaoka/R/specdata/", "sulfate", 70:72)
pollutantmean("/home/luizyamaoka/R/specdata/", "nitrate", 70:72)
data.frame(id, nobs)
data.frame(id=integer(0), nobs=integer(0))
d <- data.frame(id=integer(0), nobs=integer(0))
class(d)
d
id <- integer(0)
id
class(id)
id[1] <- 1
id
id
size(id)
row(id)
rows(id)
nrows(id)
nrow(id)
id
length(id)
complete.cases(data)
data[complete.cases(data)]
nrow(complete.cases(data))
sum(complete.cases(data))
pollutantmean("/home/luizyamaoka/R/specdata", "nitrate", 23)
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result!
sum = 0;
count = 0;
for (i in id) {
data <- read.csv(paste(directory, formatC(i, width=3, format="d", flag="0"), ".csv", sep = ""))
sum <- sum + colSums(data[pollutant], na.rm = TRUE)
count <- count + nrow(na.omit(data[pollutant]))
}
if (count == 0) {
0
} else {
sum / count
}
}
pollutantmean("/home/luizyamaoka/R/specdata", "nitrate", 23)
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result!
sum = 0;
count = 0;
for (i in id) {
data <- read.csv(paste(directory, "/", formatC(i, width=3, format="d", flag="0"), ".csv", sep = ""))
sum <- sum + colSums(data[pollutant], na.rm = TRUE)
count <- count + nrow(na.omit(data[pollutant]))
}
if (count == 0) {
0
} else {
sum / count
}
}
pollutantmean("/home/luizyamaoka/R/specdata", "nitrate", 23)
complete <- function(directory, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return a data frame of the form:
## id nobs
## 1  117
## 2  1041
## ...
## where 'id' is the monitor ID number and 'nobs' is the
## number of complete cases
nobs <- integer(0)
for (i in 1:length(id)) {
data <- read.csv(paste(directory, "/", formatC(id[i], width=3, format="d", flag="0"), ".csv", sep = ""))
nobs[i] <- sum(complete.cases(data))
}
data.frame(id, nobs)
}
complete("/home/luizyamaoka/R/specdata", 1)
complete("/home/luizyamaoka/R/specdata", c(2, 4, 8, 10, 12))
complete("/home/luizyamaoka/R/specdata", 30:25
)
complete("/home/luizyamaoka/R/specdata", 3)
?cor
cor(data$sulfate, data$nitrate, na.rm = TRUE)
cor(data$sulfate, data$nitrate, use = "complete.obs")
?rbind
rbind(c(1:2), c(1:4))
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
## NOTE: Do not round the result!
cr <- numeric(0)
files <- list.files(path=directory, pattern="*.csv", full.names=T, recursive=FALSE)
for (i in length(files) {
data <- read.csv(files[i])
if (sum(complete.cases(data)) >= threshold) {
cr[i] <- cor(data$sulfate, data$nitrate, na.rm = TRUE)
}
}
cr
}
cr <- numeric(0)
files <- list.files(path=directory, pattern="*.csv", full.names=T, recursive=FALSE)
files <- list.files(path="/home/luizyamaoka/R/specdata", pattern="*.csv", full.names=T, recursive=FALSE)
head(files)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
## NOTE: Do not round the result!
cr <- numeric(0)
files <- list.files(path=directory, pattern="*.csv", full.names=T, recursive=FALSE)
for (file in files {
data <- read.csv(file)
if (sum(complete.cases(data)) >= threshold) {
cr <- c(cr, cor(data$sulfate, data$nitrate, na.rm = TRUE))
}
}
cr
}
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
## NOTE: Do not round the result!
cr <- numeric(0)
files <- list.files(path=directory, pattern="*.csv", full.names=T, recursive=FALSE)
for (file in files) {
data <- read.csv(file)
if (sum(complete.cases(data)) >= threshold) {
cr <- c(cr, cor(data$sulfate, data$nitrate, na.rm = TRUE))
}
}
cr
}
cr <- corr("/home/luizyamaoka/R/specdata", 150)
?cor
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
## NOTE: Do not round the result!
cr <- numeric(0)
files <- list.files(path=directory, pattern="*.csv", full.names=T, recursive=FALSE)
for (file in files) {
data <- read.csv(file)
if (sum(complete.cases(data)) >= threshold) {
cr <- c(cr, cor(data$sulfate, data$nitrate, use = "complete.obs"))
}
}
cr
}
cr <- corr("/home/luizyamaoka/R/specdata", 150)
head(cr)
summary(cr)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
## NOTE: Do not round the result!
cr <- numeric(0)
files <- list.files(path=directory, pattern="*.csv", full.names=T, recursive=FALSE)
for (file in files) {
data <- read.csv(file)
if (sum(complete.cases(data)) > threshold) {
cr <- c(cr, cor(data$sulfate, data$nitrate, use = "complete.obs"))
}
}
cr
}
cr <- corr("/home/luizyamaoka/R/specdata", 150)
head(cr)
summary(cr)
cr <- corr("/home/luizyamaoka/R/specdata", 400)
head(cr)
summary(cr)
cr <- corr("/home/luizyamaoka/R/specdata", 5000)
summary(cr)
length(cr)
cr <- corr("/home/luizyamaoka/R/specdata")
length(cr)
summary(cr)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
source("corr.R")
setwd("/home/luizyamaoka/rstudio/r-programming-coursera-1-air-pollution")
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
